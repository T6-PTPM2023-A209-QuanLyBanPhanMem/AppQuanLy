#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_CuaHangPhanMem")]
	public partial class DALDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTHUOCLOAIPM(THUOCLOAIPM instance);
    partial void UpdateTHUOCLOAIPM(THUOCLOAIPM instance);
    partial void DeleteTHUOCLOAIPM(THUOCLOAIPM instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertCTHD_KEY(CTHD_KEY instance);
    partial void UpdateCTHD_KEY(CTHD_KEY instance);
    partial void DeleteCTHD_KEY(CTHD_KEY instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKEYPM(KEYPM instance);
    partial void UpdateKEYPM(KEYPM instance);
    partial void DeleteKEYPM(KEYPM instance);
    partial void InsertLOAIPHANMEM(LOAIPHANMEM instance);
    partial void UpdateLOAIPHANMEM(LOAIPHANMEM instance);
    partial void DeleteLOAIPHANMEM(LOAIPHANMEM instance);
    partial void InsertNHAPHATHANH(NHAPHATHANH instance);
    partial void UpdateNHAPHATHANH(NHAPHATHANH instance);
    partial void DeleteNHAPHATHANH(NHAPHATHANH instance);
    partial void InsertPHANMEM(PHANMEM instance);
    partial void UpdatePHANMEM(PHANMEM instance);
    partial void DeletePHANMEM(PHANMEM instance);
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertTAIKHOAN_QUANTRI(TAIKHOAN_QUANTRI instance);
    partial void UpdateTAIKHOAN_QUANTRI(TAIKHOAN_QUANTRI instance);
    partial void DeleteTAIKHOAN_QUANTRI(TAIKHOAN_QUANTRI instance);
    partial void InsertTHONGTINBOSUNG(THONGTINBOSUNG instance);
    partial void UpdateTHONGTINBOSUNG(THONGTINBOSUNG instance);
    partial void DeleteTHONGTINBOSUNG(THONGTINBOSUNG instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    #endregion
		
		public DALDataContext() : 
				base(global::DAL.Properties.Settings.Default.QL_CuaHangPhanMemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DALDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<THUOCLOAIPM> THUOCLOAIPMs
		{
			get
			{
				return this.GetTable<THUOCLOAIPM>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<CTHD_KEY> CTHD_KEYs
		{
			get
			{
				return this.GetTable<CTHD_KEY>();
			}
		}
		
		public System.Data.Linq.Table<DANHMUC> DANHMUCs
		{
			get
			{
				return this.GetTable<DANHMUC>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KEYPM> KEYPMs
		{
			get
			{
				return this.GetTable<KEYPM>();
			}
		}
		
		public System.Data.Linq.Table<LOAIPHANMEM> LOAIPHANMEMs
		{
			get
			{
				return this.GetTable<LOAIPHANMEM>();
			}
		}
		
		public System.Data.Linq.Table<NHAPHATHANH> NHAPHATHANHs
		{
			get
			{
				return this.GetTable<NHAPHATHANH>();
			}
		}
		
		public System.Data.Linq.Table<PHANMEM> PHANMEMs
		{
			get
			{
				return this.GetTable<PHANMEM>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<TAIKHOAN_QUANTRI> TAIKHOAN_QUANTRIs
		{
			get
			{
				return this.GetTable<TAIKHOAN_QUANTRI>();
			}
		}
		
		public System.Data.Linq.Table<THONGTINBOSUNG> THONGTINBOSUNGs
		{
			get
			{
				return this.GetTable<THONGTINBOSUNG>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUOCLOAIPM")]
	public partial class THUOCLOAIPM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPM;
		
		private int _MALOAI;
		
		private EntityRef<LOAIPHANMEM> _LOAIPHANMEM;
		
		private EntityRef<PHANMEM> _PHANMEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPMChanging(int value);
    partial void OnMAPMChanged();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    #endregion
		
		public THUOCLOAIPM()
		{
			this._LOAIPHANMEM = default(EntityRef<LOAIPHANMEM>);
			this._PHANMEM = default(EntityRef<PHANMEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPM
		{
			get
			{
				return this._MAPM;
			}
			set
			{
				if ((this._MAPM != value))
				{
					if (this._PHANMEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPMChanging(value);
					this.SendPropertyChanging();
					this._MAPM = value;
					this.SendPropertyChanged("MAPM");
					this.OnMAPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					if (this._LOAIPHANMEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHANMEM_THUOCLOAIPM", Storage="_LOAIPHANMEM", ThisKey="MALOAI", OtherKey="MALOAI", IsForeignKey=true)]
		public LOAIPHANMEM LOAIPHANMEM
		{
			get
			{
				return this._LOAIPHANMEM.Entity;
			}
			set
			{
				LOAIPHANMEM previousValue = this._LOAIPHANMEM.Entity;
				if (((previousValue != value) 
							|| (this._LOAIPHANMEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIPHANMEM.Entity = null;
						previousValue.THUOCLOAIPMs.Remove(this);
					}
					this._LOAIPHANMEM.Entity = value;
					if ((value != null))
					{
						value.THUOCLOAIPMs.Add(this);
						this._MALOAI = value.MALOAI;
					}
					else
					{
						this._MALOAI = default(int);
					}
					this.SendPropertyChanged("LOAIPHANMEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_THUOCLOAIPM", Storage="_PHANMEM", ThisKey="MAPM", OtherKey="MAPM", IsForeignKey=true)]
		public PHANMEM PHANMEM
		{
			get
			{
				return this._PHANMEM.Entity;
			}
			set
			{
				PHANMEM previousValue = this._PHANMEM.Entity;
				if (((previousValue != value) 
							|| (this._PHANMEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANMEM.Entity = null;
						previousValue.THUOCLOAIPMs.Remove(this);
					}
					this._PHANMEM.Entity = value;
					if ((value != null))
					{
						value.THUOCLOAIPMs.Add(this);
						this._MAPM = value.MAPM;
					}
					else
					{
						this._MAPM = default(int);
					}
					this.SendPropertyChanged("PHANMEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private int _MAPM;
		
		private int _SOLUONG;
		
		private int _THANHTIEN;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<PHANMEM> _PHANMEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAPMChanging(int value);
    partial void OnMAPMChanged();
    partial void OnSOLUONGChanging(int value);
    partial void OnSOLUONGChanged();
    partial void OnTHANHTIENChanging(int value);
    partial void OnTHANHTIENChanged();
    #endregion
		
		public CTHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._PHANMEM = default(EntityRef<PHANMEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPM
		{
			get
			{
				return this._MAPM;
			}
			set
			{
				if ((this._MAPM != value))
				{
					if (this._PHANMEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPMChanging(value);
					this.SendPropertyChanging();
					this._MAPM = value;
					this.SendPropertyChanged("MAPM");
					this.OnMAPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int NOT NULL")]
		public int SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANHTIEN", DbType="Int NOT NULL")]
		public int THANHTIEN
		{
			get
			{
				return this._THANHTIEN;
			}
			set
			{
				if ((this._THANHTIEN != value))
				{
					this.OnTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._THANHTIEN = value;
					this.SendPropertyChanged("THANHTIEN");
					this.OnTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_CTHD", Storage="_PHANMEM", ThisKey="MAPM", OtherKey="MAPM", IsForeignKey=true)]
		public PHANMEM PHANMEM
		{
			get
			{
				return this._PHANMEM.Entity;
			}
			set
			{
				PHANMEM previousValue = this._PHANMEM.Entity;
				if (((previousValue != value) 
							|| (this._PHANMEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANMEM.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._PHANMEM.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAPM = value.MAPM;
					}
					else
					{
						this._MAPM = default(int);
					}
					this.SendPropertyChanged("PHANMEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD_KEY")]
	public partial class CTHD_KEY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private int _MAPM;
		
		private int _MAKEY;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<KEYPM> _KEYPM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAPMChanging(int value);
    partial void OnMAPMChanged();
    partial void OnMAKEYChanging(int value);
    partial void OnMAKEYChanged();
    #endregion
		
		public CTHD_KEY()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._KEYPM = default(EntityRef<KEYPM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPM
		{
			get
			{
				return this._MAPM;
			}
			set
			{
				if ((this._MAPM != value))
				{
					if (this._KEYPM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPMChanging(value);
					this.SendPropertyChanging();
					this._MAPM = value;
					this.SendPropertyChanged("MAPM");
					this.OnMAPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKEY", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAKEY
		{
			get
			{
				return this._MAKEY;
			}
			set
			{
				if ((this._MAKEY != value))
				{
					if (this._KEYPM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKEYChanging(value);
					this.SendPropertyChanging();
					this._MAKEY = value;
					this.SendPropertyChanged("MAKEY");
					this.OnMAKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD_KEY", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHD_KEYs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHD_KEYs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KEYPM_CTHD_KEY", Storage="_KEYPM", ThisKey="MAPM,MAKEY", OtherKey="MAPM,MAKEY", IsForeignKey=true)]
		public KEYPM KEYPM
		{
			get
			{
				return this._KEYPM.Entity;
			}
			set
			{
				KEYPM previousValue = this._KEYPM.Entity;
				if (((previousValue != value) 
							|| (this._KEYPM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KEYPM.Entity = null;
						previousValue.CTHD_KEYs.Remove(this);
					}
					this._KEYPM.Entity = value;
					if ((value != null))
					{
						value.CTHD_KEYs.Add(this);
						this._MAPM = value.MAPM;
						this._MAKEY = value.MAKEY;
					}
					else
					{
						this._MAPM = default(int);
						this._MAKEY = default(int);
					}
					this.SendPropertyChanged("KEYPM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DANHMUC")]
	public partial class DANHMUC
	{
		
		private string _TEN;
		
		private string _GIATRI;
		
		public DANHMUC()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(MAX)")]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this._TEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRI", DbType="NVarChar(MAX)")]
		public string GIATRI
		{
			get
			{
				return this._GIATRI;
			}
			set
			{
				if ((this._GIATRI != value))
				{
					this._GIATRI = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MATK;
		
		private System.DateTime _THOIGIANLAP;
		
		private int _TONGTIEN;
		
		private string _TINHTRANG;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntitySet<CTHD_KEY> _CTHD_KEYs;
		
		private EntitySet<THONGTINBOSUNG> _THONGTINBOSUNGs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMATKChanging(string value);
    partial void OnMATKChanged();
    partial void OnTHOIGIANLAPChanging(System.DateTime value);
    partial void OnTHOIGIANLAPChanged();
    partial void OnTONGTIENChanging(int value);
    partial void OnTONGTIENChanged();
    partial void OnTINHTRANGChanging(string value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._CTHD_KEYs = new EntitySet<CTHD_KEY>(new Action<CTHD_KEY>(this.attach_CTHD_KEYs), new Action<CTHD_KEY>(this.detach_CTHD_KEYs));
			this._THONGTINBOSUNGs = new EntitySet<THONGTINBOSUNG>(new Action<THONGTINBOSUNG>(this.attach_THONGTINBOSUNGs), new Action<THONGTINBOSUNG>(this.detach_THONGTINBOSUNGs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATK", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string MATK
		{
			get
			{
				return this._MATK;
			}
			set
			{
				if ((this._MATK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATKChanging(value);
					this.SendPropertyChanging();
					this._MATK = value;
					this.SendPropertyChanged("MATK");
					this.OnMATKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIGIANLAP", DbType="DateTime NOT NULL")]
		public System.DateTime THOIGIANLAP
		{
			get
			{
				return this._THOIGIANLAP;
			}
			set
			{
				if ((this._THOIGIANLAP != value))
				{
					this.OnTHOIGIANLAPChanging(value);
					this.SendPropertyChanging();
					this._THOIGIANLAP = value;
					this.SendPropertyChanged("THOIGIANLAP");
					this.OnTHOIGIANLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIEN", DbType="Int NOT NULL")]
		public int TONGTIEN
		{
			get
			{
				return this._TONGTIEN;
			}
			set
			{
				if ((this._TONGTIEN != value))
				{
					this.OnTONGTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTIEN = value;
					this.SendPropertyChanged("TONGTIEN");
					this.OnTONGTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_CTHDs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD_KEY", Storage="_CTHD_KEYs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHD_KEY> CTHD_KEYs
		{
			get
			{
				return this._CTHD_KEYs;
			}
			set
			{
				this._CTHD_KEYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_THONGTINBOSUNG", Storage="_THONGTINBOSUNGs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<THONGTINBOSUNG> THONGTINBOSUNGs
		{
			get
			{
				return this._THONGTINBOSUNGs;
			}
			set
			{
				this._THONGTINBOSUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_HOADON", Storage="_TAIKHOAN", ThisKey="MATK", OtherKey="MATK", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MATK = value.MATK;
					}
					else
					{
						this._MATK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
		
		private void attach_CTHD_KEYs(CTHD_KEY entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHD_KEYs(CTHD_KEY entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
		
		private void attach_THONGTINBOSUNGs(THONGTINBOSUNG entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_THONGTINBOSUNGs(THONGTINBOSUNG entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KEYPM")]
	public partial class KEYPM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPM;
		
		private int _MAKEY;
		
		private string _GIATRI;
		
		private string _TAIKHOAN;
		
		private string _MATKHAU;
		
		private System.Nullable<int> _TINHTRANG;
		
		private EntitySet<CTHD_KEY> _CTHD_KEYs;
		
		private EntityRef<PHANMEM> _PHANMEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPMChanging(int value);
    partial void OnMAPMChanged();
    partial void OnMAKEYChanging(int value);
    partial void OnMAKEYChanged();
    partial void OnGIATRIChanging(string value);
    partial void OnGIATRIChanged();
    partial void OnTAIKHOANChanging(string value);
    partial void OnTAIKHOANChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnTINHTRANGChanging(System.Nullable<int> value);
    partial void OnTINHTRANGChanged();
    #endregion
		
		public KEYPM()
		{
			this._CTHD_KEYs = new EntitySet<CTHD_KEY>(new Action<CTHD_KEY>(this.attach_CTHD_KEYs), new Action<CTHD_KEY>(this.detach_CTHD_KEYs));
			this._PHANMEM = default(EntityRef<PHANMEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPM
		{
			get
			{
				return this._MAPM;
			}
			set
			{
				if ((this._MAPM != value))
				{
					if (this._PHANMEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPMChanging(value);
					this.SendPropertyChanging();
					this._MAPM = value;
					this.SendPropertyChanged("MAPM");
					this.OnMAPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKEY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAKEY
		{
			get
			{
				return this._MAKEY;
			}
			set
			{
				if ((this._MAKEY != value))
				{
					this.OnMAKEYChanging(value);
					this.SendPropertyChanging();
					this._MAKEY = value;
					this.SendPropertyChanged("MAKEY");
					this.OnMAKEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRI", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string GIATRI
		{
			get
			{
				return this._GIATRI;
			}
			set
			{
				if ((this._GIATRI != value))
				{
					this.OnGIATRIChanging(value);
					this.SendPropertyChanging();
					this._GIATRI = value;
					this.SendPropertyChanged("GIATRI");
					this.OnGIATRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAIKHOAN", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN;
			}
			set
			{
				if ((this._TAIKHOAN != value))
				{
					this.OnTAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._TAIKHOAN = value;
					this.SendPropertyChanged("TAIKHOAN");
					this.OnTAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TINHTRANG", DbType="Int")]
		public System.Nullable<int> TINHTRANG
		{
			get
			{
				return this._TINHTRANG;
			}
			set
			{
				if ((this._TINHTRANG != value))
				{
					this.OnTINHTRANGChanging(value);
					this.SendPropertyChanging();
					this._TINHTRANG = value;
					this.SendPropertyChanged("TINHTRANG");
					this.OnTINHTRANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KEYPM_CTHD_KEY", Storage="_CTHD_KEYs", ThisKey="MAPM,MAKEY", OtherKey="MAPM,MAKEY")]
		public EntitySet<CTHD_KEY> CTHD_KEYs
		{
			get
			{
				return this._CTHD_KEYs;
			}
			set
			{
				this._CTHD_KEYs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_KEYPM", Storage="_PHANMEM", ThisKey="MAPM", OtherKey="MAPM", IsForeignKey=true)]
		public PHANMEM PHANMEM
		{
			get
			{
				return this._PHANMEM.Entity;
			}
			set
			{
				PHANMEM previousValue = this._PHANMEM.Entity;
				if (((previousValue != value) 
							|| (this._PHANMEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANMEM.Entity = null;
						previousValue.KEYPMs.Remove(this);
					}
					this._PHANMEM.Entity = value;
					if ((value != null))
					{
						value.KEYPMs.Add(this);
						this._MAPM = value.MAPM;
					}
					else
					{
						this._MAPM = default(int);
					}
					this.SendPropertyChanged("PHANMEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHD_KEYs(CTHD_KEY entity)
		{
			this.SendPropertyChanging();
			entity.KEYPM = this;
		}
		
		private void detach_CTHD_KEYs(CTHD_KEY entity)
		{
			this.SendPropertyChanging();
			entity.KEYPM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIPHANMEM")]
	public partial class LOAIPHANMEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MALOAI;
		
		private string _TENLOAI;
		
		private EntitySet<THUOCLOAIPM> _THUOCLOAIPMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAIChanging(int value);
    partial void OnMALOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAIPHANMEM()
		{
			this._THUOCLOAIPMs = new EntitySet<THUOCLOAIPM>(new Action<THUOCLOAIPM>(this.attach_THUOCLOAIPMs), new Action<THUOCLOAIPM>(this.detach_THUOCLOAIPMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MALOAI
		{
			get
			{
				return this._MALOAI;
			}
			set
			{
				if ((this._MALOAI != value))
				{
					this.OnMALOAIChanging(value);
					this.SendPropertyChanging();
					this._MALOAI = value;
					this.SendPropertyChanged("MALOAI");
					this.OnMALOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIPHANMEM_THUOCLOAIPM", Storage="_THUOCLOAIPMs", ThisKey="MALOAI", OtherKey="MALOAI")]
		public EntitySet<THUOCLOAIPM> THUOCLOAIPMs
		{
			get
			{
				return this._THUOCLOAIPMs;
			}
			set
			{
				this._THUOCLOAIPMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUOCLOAIPMs(THUOCLOAIPM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHANMEM = this;
		}
		
		private void detach_THUOCLOAIPMs(THUOCLOAIPM entity)
		{
			this.SendPropertyChanging();
			entity.LOAIPHANMEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAPHATHANH")]
	public partial class NHAPHATHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MANPH;
		
		private string _TENNPH;
		
		private EntitySet<PHANMEM> _PHANMEMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANPHChanging(int value);
    partial void OnMANPHChanged();
    partial void OnTENNPHChanging(string value);
    partial void OnTENNPHChanged();
    #endregion
		
		public NHAPHATHANH()
		{
			this._PHANMEMs = new EntitySet<PHANMEM>(new Action<PHANMEM>(this.attach_PHANMEMs), new Action<PHANMEM>(this.detach_PHANMEMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANPH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MANPH
		{
			get
			{
				return this._MANPH;
			}
			set
			{
				if ((this._MANPH != value))
				{
					this.OnMANPHChanging(value);
					this.SendPropertyChanging();
					this._MANPH = value;
					this.SendPropertyChanged("MANPH");
					this.OnMANPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNPH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENNPH
		{
			get
			{
				return this._TENNPH;
			}
			set
			{
				if ((this._TENNPH != value))
				{
					this.OnTENNPHChanging(value);
					this.SendPropertyChanging();
					this._TENNPH = value;
					this.SendPropertyChanged("TENNPH");
					this.OnTENNPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAPHATHANH_PHANMEM", Storage="_PHANMEMs", ThisKey="MANPH", OtherKey="MANPH")]
		public EntitySet<PHANMEM> PHANMEMs
		{
			get
			{
				return this._PHANMEMs;
			}
			set
			{
				this._PHANMEMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANMEMs(PHANMEM entity)
		{
			this.SendPropertyChanging();
			entity.NHAPHATHANH = this;
		}
		
		private void detach_PHANMEMs(PHANMEM entity)
		{
			this.SendPropertyChanging();
			entity.NHAPHATHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANMEM")]
	public partial class PHANMEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAPM;
		
		private string _TENPM;
		
		private string _MOTA;
		
		private int _MANPH;
		
		private System.Nullable<System.DateTime> _NGAYPHATHANH;
		
		private int _THOIHAN;
		
		private string _DONVITHOIHAN;
		
		private int _DONGIA;
		
		private int _SOLUONG;
		
		private string _HINHANH;
		
		private EntitySet<THUOCLOAIPM> _THUOCLOAIPMs;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntitySet<KEYPM> _KEYPMs;
		
		private EntitySet<THONGTINBOSUNG> _THONGTINBOSUNGs;
		
		private EntitySet<Banner> _Banners;
		
		private EntityRef<NHAPHATHANH> _NHAPHATHANH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPMChanging(int value);
    partial void OnMAPMChanged();
    partial void OnTENPMChanging(string value);
    partial void OnTENPMChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnMANPHChanging(int value);
    partial void OnMANPHChanged();
    partial void OnNGAYPHATHANHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYPHATHANHChanged();
    partial void OnTHOIHANChanging(int value);
    partial void OnTHOIHANChanged();
    partial void OnDONVITHOIHANChanging(string value);
    partial void OnDONVITHOIHANChanged();
    partial void OnDONGIAChanging(int value);
    partial void OnDONGIAChanged();
    partial void OnSOLUONGChanging(int value);
    partial void OnSOLUONGChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public PHANMEM()
		{
			this._THUOCLOAIPMs = new EntitySet<THUOCLOAIPM>(new Action<THUOCLOAIPM>(this.attach_THUOCLOAIPMs), new Action<THUOCLOAIPM>(this.detach_THUOCLOAIPMs));
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._KEYPMs = new EntitySet<KEYPM>(new Action<KEYPM>(this.attach_KEYPMs), new Action<KEYPM>(this.detach_KEYPMs));
			this._THONGTINBOSUNGs = new EntitySet<THONGTINBOSUNG>(new Action<THONGTINBOSUNG>(this.attach_THONGTINBOSUNGs), new Action<THONGTINBOSUNG>(this.detach_THONGTINBOSUNGs));
			this._Banners = new EntitySet<Banner>(new Action<Banner>(this.attach_Banners), new Action<Banner>(this.detach_Banners));
			this._NHAPHATHANH = default(EntityRef<NHAPHATHANH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPM", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAPM
		{
			get
			{
				return this._MAPM;
			}
			set
			{
				if ((this._MAPM != value))
				{
					this.OnMAPMChanging(value);
					this.SendPropertyChanging();
					this._MAPM = value;
					this.SendPropertyChanged("MAPM");
					this.OnMAPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPM", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string TENPM
		{
			get
			{
				return this._TENPM;
			}
			set
			{
				if ((this._TENPM != value))
				{
					this.OnTENPMChanging(value);
					this.SendPropertyChanging();
					this._TENPM = value;
					this.SendPropertyChanged("TENPM");
					this.OnTENPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(1000)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANPH", DbType="Int NOT NULL")]
		public int MANPH
		{
			get
			{
				return this._MANPH;
			}
			set
			{
				if ((this._MANPH != value))
				{
					if (this._NHAPHATHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANPHChanging(value);
					this.SendPropertyChanging();
					this._MANPH = value;
					this.SendPropertyChanged("MANPH");
					this.OnMANPHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYPHATHANH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYPHATHANH
		{
			get
			{
				return this._NGAYPHATHANH;
			}
			set
			{
				if ((this._NGAYPHATHANH != value))
				{
					this.OnNGAYPHATHANHChanging(value);
					this.SendPropertyChanging();
					this._NGAYPHATHANH = value;
					this.SendPropertyChanged("NGAYPHATHANH");
					this.OnNGAYPHATHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THOIHAN", DbType="Int NOT NULL")]
		public int THOIHAN
		{
			get
			{
				return this._THOIHAN;
			}
			set
			{
				if ((this._THOIHAN != value))
				{
					this.OnTHOIHANChanging(value);
					this.SendPropertyChanging();
					this._THOIHAN = value;
					this.SendPropertyChanged("THOIHAN");
					this.OnTHOIHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONVITHOIHAN", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string DONVITHOIHAN
		{
			get
			{
				return this._DONVITHOIHAN;
			}
			set
			{
				if ((this._DONVITHOIHAN != value))
				{
					this.OnDONVITHOIHANChanging(value);
					this.SendPropertyChanging();
					this._DONVITHOIHAN = value;
					this.SendPropertyChanged("DONVITHOIHAN");
					this.OnDONVITHOIHANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Int NOT NULL")]
		public int DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int NOT NULL")]
		public int SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(MAX)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_THUOCLOAIPM", Storage="_THUOCLOAIPMs", ThisKey="MAPM", OtherKey="MAPM")]
		public EntitySet<THUOCLOAIPM> THUOCLOAIPMs
		{
			get
			{
				return this._THUOCLOAIPMs;
			}
			set
			{
				this._THUOCLOAIPMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_CTHD", Storage="_CTHDs", ThisKey="MAPM", OtherKey="MAPM")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_KEYPM", Storage="_KEYPMs", ThisKey="MAPM", OtherKey="MAPM")]
		public EntitySet<KEYPM> KEYPMs
		{
			get
			{
				return this._KEYPMs;
			}
			set
			{
				this._KEYPMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_THONGTINBOSUNG", Storage="_THONGTINBOSUNGs", ThisKey="MAPM", OtherKey="MAPM")]
		public EntitySet<THONGTINBOSUNG> THONGTINBOSUNGs
		{
			get
			{
				return this._THONGTINBOSUNGs;
			}
			set
			{
				this._THONGTINBOSUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_Banner", Storage="_Banners", ThisKey="MAPM", OtherKey="MaPM")]
		public EntitySet<Banner> Banners
		{
			get
			{
				return this._Banners;
			}
			set
			{
				this._Banners.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAPHATHANH_PHANMEM", Storage="_NHAPHATHANH", ThisKey="MANPH", OtherKey="MANPH", IsForeignKey=true)]
		public NHAPHATHANH NHAPHATHANH
		{
			get
			{
				return this._NHAPHATHANH.Entity;
			}
			set
			{
				NHAPHATHANH previousValue = this._NHAPHATHANH.Entity;
				if (((previousValue != value) 
							|| (this._NHAPHATHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAPHATHANH.Entity = null;
						previousValue.PHANMEMs.Remove(this);
					}
					this._NHAPHATHANH.Entity = value;
					if ((value != null))
					{
						value.PHANMEMs.Add(this);
						this._MANPH = value.MANPH;
					}
					else
					{
						this._MANPH = default(int);
					}
					this.SendPropertyChanged("NHAPHATHANH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_THUOCLOAIPMs(THUOCLOAIPM entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = this;
		}
		
		private void detach_THUOCLOAIPMs(THUOCLOAIPM entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = null;
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = null;
		}
		
		private void attach_KEYPMs(KEYPM entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = this;
		}
		
		private void detach_KEYPMs(KEYPM entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = null;
		}
		
		private void attach_THONGTINBOSUNGs(THONGTINBOSUNG entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = this;
		}
		
		private void detach_THONGTINBOSUNGs(THONGTINBOSUNG entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = null;
		}
		
		private void attach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = this;
		}
		
		private void detach_Banners(Banner entity)
		{
			this.SendPropertyChanging();
			entity.PHANMEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATK;
		
		private string _TENTK;
		
		private string _HOTEN;
		
		private string _CCCD;
		
		private string _EMAIL;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private System.Nullable<int> _SODU;
		
		private string _HINHDAIDIEN;
		
		private EntitySet<HOADON> _HOADONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATKChanging(string value);
    partial void OnMATKChanged();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSODUChanging(System.Nullable<int> value);
    partial void OnSODUChanged();
    partial void OnHINHDAIDIENChanging(string value);
    partial void OnHINHDAIDIENChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATK", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATK
		{
			get
			{
				return this._MATK;
			}
			set
			{
				if ((this._MATK != value))
				{
					this.OnMATKChanging(value);
					this.SendPropertyChanging();
					this._MATK = value;
					this.SendPropertyChanged("MATK");
					this.OnMATKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="VarChar(15)")]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="VarChar(200)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SODU", DbType="Int")]
		public System.Nullable<int> SODU
		{
			get
			{
				return this._SODU;
			}
			set
			{
				if ((this._SODU != value))
				{
					this.OnSODUChanging(value);
					this.SendPropertyChanging();
					this._SODU = value;
					this.SendPropertyChanged("SODU");
					this.OnSODUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHDAIDIEN", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string HINHDAIDIEN
		{
			get
			{
				return this._HINHDAIDIEN;
			}
			set
			{
				if ((this._HINHDAIDIEN != value))
				{
					this.OnHINHDAIDIENChanging(value);
					this.SendPropertyChanging();
					this._HINHDAIDIEN = value;
					this.SendPropertyChanged("HINHDAIDIEN");
					this.OnHINHDAIDIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_HOADON", Storage="_HOADONs", ThisKey="MATK", OtherKey="MATK")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN_QUANTRI")]
	public partial class TAIKHOAN_QUANTRI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TENTK;
		
		private string _MATKHAU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTENTKChanging(string value);
    partial void OnTENTKChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    #endregion
		
		public TAIKHOAN_QUANTRI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTK", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TENTK
		{
			get
			{
				return this._TENTK;
			}
			set
			{
				if ((this._TENTK != value))
				{
					this.OnTENTKChanging(value);
					this.SendPropertyChanging();
					this._TENTK = value;
					this.SendPropertyChanged("TENTK");
					this.OnTENTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTINBOSUNG")]
	public partial class THONGTINBOSUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private int _MAPM;
		
		private int _STT;
		
		private string _TEN;
		
		private string _GIATRI;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<PHANMEM> _PHANMEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAPMChanging(int value);
    partial void OnMAPMChanged();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnTENChanging(string value);
    partial void OnTENChanged();
    partial void OnGIATRIChanging(string value);
    partial void OnGIATRIChanged();
    #endregion
		
		public THONGTINBOSUNG()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._PHANMEM = default(EntityRef<PHANMEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPM", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAPM
		{
			get
			{
				return this._MAPM;
			}
			set
			{
				if ((this._MAPM != value))
				{
					if (this._PHANMEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPMChanging(value);
					this.SendPropertyChanging();
					this._MAPM = value;
					this.SendPropertyChanged("MAPM");
					this.OnMAPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TEN
		{
			get
			{
				return this._TEN;
			}
			set
			{
				if ((this._TEN != value))
				{
					this.OnTENChanging(value);
					this.SendPropertyChanging();
					this._TEN = value;
					this.SendPropertyChanged("TEN");
					this.OnTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATRI", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GIATRI
		{
			get
			{
				return this._GIATRI;
			}
			set
			{
				if ((this._GIATRI != value))
				{
					this.OnGIATRIChanging(value);
					this.SendPropertyChanging();
					this._GIATRI = value;
					this.SendPropertyChanged("GIATRI");
					this.OnGIATRIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_THONGTINBOSUNG", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.THONGTINBOSUNGs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.THONGTINBOSUNGs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_THONGTINBOSUNG", Storage="_PHANMEM", ThisKey="MAPM", OtherKey="MAPM", IsForeignKey=true)]
		public PHANMEM PHANMEM
		{
			get
			{
				return this._PHANMEM.Entity;
			}
			set
			{
				PHANMEM previousValue = this._PHANMEM.Entity;
				if (((previousValue != value) 
							|| (this._PHANMEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANMEM.Entity = null;
						previousValue.THONGTINBOSUNGs.Remove(this);
					}
					this._PHANMEM.Entity = value;
					if ((value != null))
					{
						value.THONGTINBOSUNGs.Add(this);
						this._MAPM = value.MAPM;
					}
					else
					{
						this._MAPM = default(int);
					}
					this.SendPropertyChanged("PHANMEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banner")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBN;
		
		private System.Nullable<int> _MaPM;
		
		private string _HINHANH;
		
		private EntityRef<PHANMEM> _PHANMEM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBNChanging(int value);
    partial void OnMaBNChanged();
    partial void OnMaPMChanging(System.Nullable<int> value);
    partial void OnMaPMChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public Banner()
		{
			this._PHANMEM = default(EntityRef<PHANMEM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBN
		{
			get
			{
				return this._MaBN;
			}
			set
			{
				if ((this._MaBN != value))
				{
					this.OnMaBNChanging(value);
					this.SendPropertyChanging();
					this._MaBN = value;
					this.SendPropertyChanged("MaBN");
					this.OnMaBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPM", DbType="Int")]
		public System.Nullable<int> MaPM
		{
			get
			{
				return this._MaPM;
			}
			set
			{
				if ((this._MaPM != value))
				{
					if (this._PHANMEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPMChanging(value);
					this.SendPropertyChanging();
					this._MaPM = value;
					this.SendPropertyChanged("MaPM");
					this.OnMaPMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHANMEM_Banner", Storage="_PHANMEM", ThisKey="MaPM", OtherKey="MAPM", IsForeignKey=true)]
		public PHANMEM PHANMEM
		{
			get
			{
				return this._PHANMEM.Entity;
			}
			set
			{
				PHANMEM previousValue = this._PHANMEM.Entity;
				if (((previousValue != value) 
							|| (this._PHANMEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHANMEM.Entity = null;
						previousValue.Banners.Remove(this);
					}
					this._PHANMEM.Entity = value;
					if ((value != null))
					{
						value.Banners.Add(this);
						this._MaPM = value.MAPM;
					}
					else
					{
						this._MaPM = default(Nullable<int>);
					}
					this.SendPropertyChanged("PHANMEM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
